{"version":3,"sources":["context.js","components/layout/Header.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","c","id","payload","concat","toConsumableArray","map","contact","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Header","className","href","branding","Link","to","defaultProps","Contact","showContact","onShowClick","onDeleteClick","delete","_this2","name","onClick","style","cursor","float","color","bind","marginRight","email","phone","Contacts","handleDelete","console","log","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholer","onChange","error","htmlFor","placeholder","AddContact","errors","e","defineProperty","target","onSubmit","newContact","preventDefault","abrupt","post","history","push","layout_TextInputGroup","EditContact","updateContact","match","params","put","About","NotFound","class","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b4423a8.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nconst Context = React.createContext()\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(c => c.id !== action.payload)\n      }\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      }\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      }\n    default:\n      return state\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action))\n    }\n  }\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n    this.setState({ contacts: res.data })\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-info mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {props.branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add contact\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My app'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport { Consumer } from '../../context'\n\nclass Contact extends Component {\n  state = {\n    showContact: false\n  }\n\n  onShowClick = () => {\n    this.setState({ showContact: !this.state.showContact })\n  }\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n    dispatch({ type: 'DELETE_CONTACT', payload: id })\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {this.props.contact.name}{' '}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-chevron-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    this.props.contact.id,\n                    value.dispatch\n                  )}\n                />\n                <Link to={`contact/edit/${this.props.contact.id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {this.state.showContact ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    {this.props.contact.email}\n                  </li>\n                  <li className=\"list-group-item\">\n                    {this.props.contact.phone}\n                  </li>\n                </ul>\n              ) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact\n","import React, { Component } from 'react';\n\nimport { Consumer } from '../../context';\nimport Contact from './Contact';\n\nclass Contacts extends Component {\n  handleDelete = id => {\n    console.log(id);\n    const contacts = this.state.contacts.filter(c => c.id !== id);\n    this.setState({ contacts });\n  };\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4\">\n                <span className=\"text-info\">Contact</span> List\n              </h1>\n              {value.contacts.map(c => (\n                <Contact\n                  key={c.id}\n                  contact={c}\n                  onDeleteClick={this.handleDelete.bind(this, c.id)}\n                />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholer,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={\n          !error\n            ? 'form-control form-control-lg'\n            : 'is-invalid form-control form-control-lg'\n        }\n        placeholder={placeholer}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react'\n\nimport axios from 'axios'\n\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n\n    // Check for errors\n    if (this.state.name === '') {\n      this.setState({ errors: { name: 'Name is required' } })\n      return\n    }\n    if (this.state.email === '') {\n      this.setState({ errors: { email: 'Email is required' } })\n      return\n    }\n    if (this.state.phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } })\n      return\n    }\n\n    const newContact = {\n      name: [this.state.name],\n      email: [this.state.email],\n      phone: [this.state.phone]\n    }\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    )\n    dispatch({ type: 'ADD_CONTACT', payload: res.data })\n\n    // Clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n\n    this.props.history.push('/')\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter name...\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                    error={this.state.errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter email...\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                    error={this.state.errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    type=\"text\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone...\"\n                    value={this.state.phone}\n                    onChange={this.onChange}\n                    error={this.state.errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add\"\n                    className=\"btn btn-block btn-info\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact\n","import React, { Component } from 'react'\n\nimport axios from 'axios'\n\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    )\n    const contact = res.data\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    })\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n\n    // Check for errors\n    if (this.state.name === '') {\n      this.setState({ errors: { name: 'Name is required' } })\n      return\n    }\n    if (this.state.email === '') {\n      this.setState({ errors: { email: 'Email is required' } })\n      return\n    }\n    if (this.state.phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } })\n      return\n    }\n\n    const updateContact = {\n      name: this.state.name,\n      email: this.state.email,\n      phone: this.state.phone\n    }\n\n    const { id } = this.props.match.params\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    )\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\n\n    // Clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n\n    this.props.history.push('/')\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Enter name...\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                    error={this.state.errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter email...\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                    error={this.state.errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    type=\"text\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone...\"\n                    value={this.state.phone}\n                    onChange={this.onChange}\n                    error={this.state.errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update\"\n                    className=\"btn btn-block btn-info\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About page</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span class=\"text-danger\">404</span> Page not found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react'\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { Provider } from './context'\nimport Header from './components/layout/Header'\nimport Contacts from './components/contacts/Contacts'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport About from './components/pages/About'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport NotFound from './components/pages/NotFound'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <React.Fragment>\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}